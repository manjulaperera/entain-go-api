syntax = "proto3";
package racing;

option go_package = "/racing";

import "google/protobuf/timestamp.proto";

service Racing {
  // ListRaces will return a collection of all races.
  rpc ListRaces(ListRacesRequest) returns (ListRacesResponse) {}

  // Get race details by id
  rpc GetRaceById(GetRaceRequest) returns (GetRaceResponse) {}
}

/* Requests/Responses */

message ListRacesRequest {
  ListRacesRequestFilter filter = 1;
  optional ListRacesRequestOrderBy order_by = 2;
}

// Response to ListRaces call.
message ListRacesResponse {
  repeated Race races = 1;
}

// Filter for listing races.
message ListRacesRequestFilter {
  repeated int64 meeting_ids = 1;

  // Use this filter for filtering the race meets based on their visibility
  optional bool meeting_visibility = 2;
}

/* An array of order by fileds to be used to order the races list.
    The list will be ordered in the order the fields appear in this list
  */
message ListRacesRequestOrderBy {
  repeated OrderByField order_by_fields = 1;
}

// Request for GetRaceById call
message GetRaceRequest {
  int64 id = 1;
}

// Response for GetRaceById call
message GetRaceResponse {
  Race race = 1;
}


/* Resources */

// A race resource.
message Race {
  // ID represents a unique identifier for the race.
  int64 id = 1;
  // MeetingID represents a unique identifier for the races meeting.
  int64 meeting_id = 2;
  // Name is the official name given to the race.
  string name = 3;
  // Number represents the number of the race.
  int64 number = 4;
  // Visible represents whether or not the race is visible.
  bool visible = 5;
  // AdvertisedStartTime is the time the race is advertised to run.
  google.protobuf.Timestamp advertised_start_time = 6;
  // Status is a derived field from AdvertisedStartTime. Status = OPEN if AdvertisedStartTime > current local time or it'll be CLOSED
  string status = 7;
}

// A field with it's sort order to be used as a sort/ order by field in the ListRacesRequest
message OrderByField {
  // The field to be used for sorting/ ordering
  string field = 1;

  // Sort order/ direction of the given field
  enum Direction {
    // Ascending order
    ASC = 0;
    // Descending order
    DESC = 1;
  }

  Direction direction = 2;
}


